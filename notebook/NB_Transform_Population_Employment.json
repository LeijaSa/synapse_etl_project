{
	"name": "NB_Transform_Population_Employment",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "group2sparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "fd98aaa3-6d52-491f-929e-7f77d4eed43c"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/23b183d5-a30f-46b8-b418-ad060fb67787/resourceGroups/Group2SynapseETLProject/providers/Microsoft.Synapse/workspaces/group2-synapse-etl-workspace/bigDataPools/group2sparkpool",
				"name": "group2sparkpool",
				"type": "Spark",
				"endpoint": "https://group2-synapse-etl-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/group2sparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"from pyspark.sql import SparkSession\n",
					"\n",
					"# Initialize Spark session\n",
					"spark = SparkSession.builder.appName(\"Combine CSVs\").getOrCreate()\n",
					"\n",
					"# Specific years to include\n",
					"years = [14, 15, 18, 21]  \n",
					"\n",
					"# Generate file paths with two-digit years\n",
					"file_paths = [\n",
					"    f\"abfss://vaesto@group2projectstorage.dfs.core.windows.net/raw/population_employment{year}.csv\"\n",
					"    for year in years\n",
					"]\n",
					"\n",
					"# Read CSV files into DataFrames and combine\n",
					"df_combined = None  # Initialize as None\n",
					"\n",
					"for file in file_paths:\n",
					"    df = spark.read.option(\"header\", True).csv(file)  # Read each CSV\n",
					"    if df_combined is None:\n",
					"        df_combined = df  # First DataFrame\n",
					"    else:\n",
					"        df_combined = df_combined.unionByName(df, allowMissingColumns=True)  # Merge\n",
					"\n",
					"# Show or save the combined DataFrame\n",
					"df_combined.show()  # Display the combined DataFrame\n",
					"# df_combined.write.csv(\"output_path.csv\", header=True)  # Save if needed"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"source": [
					"df = spark.read.csv(\"abfss://vaesto@group2projectstorage.dfs.core.windows.net/raw/Population_employment.csv\", header=True, inferSchema=True, encoding=\"Latin1\")\n",
					"\n",
					"display(df)"
				],
				"execution_count": null
			}
		]
	}
}