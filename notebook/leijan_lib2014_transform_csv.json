{
	"name": "leijan_lib2014_transform_csv",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "group2sparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "f8118622-3126-47d5-bdab-28062382fbe3"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/23b183d5-a30f-46b8-b418-ad060fb67787/resourceGroups/Group2SynapseETLProject/providers/Microsoft.Synapse/workspaces/group2-synapse-etl-workspace/bigDataPools/group2sparkpool",
				"name": "group2sparkpool",
				"type": "Spark",
				"endpoint": "https://group2-synapse-etl-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/group2sparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"from pyspark.sql import SparkSession\n",
					"\n",
					"spark = SparkSession.builder.appName(\"ReadExcel\").config(\"spark.jars.packages\", \"com.crealytics:spark-excel_2.12:0.13.3\").getOrCreate()\n",
					"\n",
					"df = spark.read.format(\"com.crealytics.spark.excel\").option(\"header\", \"true\").option(\"inferSchema\", \"true\").option(\"dataAddress\", \"'All'!A1\").load(\"abfss://library@group2projectstorage.dfs.core.windows.net/raw/library2014.xls\")\n",
					"\n",
					"display(df)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"# Print the list of columns in separate lines\n",
					"print(\"Columns in DataFrame:\")\n",
					"for col in df.columns:\n",
					"    print(col)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"import re\n",
					"\n",
					"# Function to rename columns: remove numbers, parentheses, hyphens, and make lowercase\n",
					"new_columns = [re.sub(r'[^\\w\\s]', '', col)  # Remove special characters like (), -, etc.\n",
					"               .replace(\" \", \"_\")  # Replace spaces with underscores\n",
					"               .lower()  # Convert to lowercase\n",
					"               .replace(r'\\d+', '')  # Remove digits\n",
					"               for col in df.columns]\n",
					"\n",
					"# Apply new column names\n",
					"for old_name, new_name in zip(df.columns, new_columns):\n",
					"    df = df.withColumnRenamed(old_name, new_name)\n",
					"\n",
					"# Show the DataFrame with the updated column names\n",
					"display(df)\n",
					"\n",
					"# Print the updated column names in separate lines\n",
					"print(\"Updated Columns in DataFrame:\")\n",
					"for col in df.columns:\n",
					"    print(col)"
				],
				"execution_count": 19
			}
		]
	}
}